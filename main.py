from aiogram import executor
from aiogram.types import Message, CallbackQuery
from config import dp
from main_button import menuStart
from inline import mainMenu, menuXiti, menuLav, menuHot, menuShaur, menuGam, menuAssorti, menuKombo, menuDesert
from inline import menuSous, menuSok, menuChoy, shaurmamenu, Lavashmenu


@dp.message_handler(commands="start")
async def start(msg: Message):
    await msg.answer_photo(open("Images /evos-01.png", "rb"), f"Assalomu alaykum {msg.from_user.full_name}."
                                                              f"\nEVOS Dostavka botiga xush kelibsiz!"
                                                              f"", reply_markup=menuStart)


@dp.message_handler(commands="help")
async def help1(msg: Message):
    await msg.answer_photo(open("Images /help.jpg", "rb"), f"Yordam uchun https://t.me/Hello_this_isAbdurrohman "
                                                           f"profiliga murojaat qiling!")


@dp.message_handler(text="üçΩ MENU üçΩ")
async def menu(msg: Message):
    await msg.answer_photo(open("Images /menu.png", "rb"), "Mahsulot turini tanlang: ", reply_markup=mainMenu)


@dp.callback_query_handler(text_contains="menu")
async def menu(call: CallbackQuery):
    await call.message.answer_photo(open("Images /menu.png", "rb"), "Mahsulot turini tanlang: ", reply_markup=mainMenu)


@dp.callback_query_handler(text_contains="back")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Star.jpg", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuXiti)


@dp.callback_query_handler(text_contains="üåü")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Star.jpg", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuXiti)


@dp.callback_query_handler(text_contains="üåØ")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Lavash_menu.png", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuLav)


@dp.callback_query_handler(text_contains="üå≠")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Xot_dog_menu.png", "rb"), "Mahsulotni Tanlang: ",
                                    reply_markup=menuHot)


@dp.callback_query_handler(text_contains="üåÆ")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Shaurma_menu.png", "rb"), "Mahsulotni Tanlang: ",
                                    reply_markup=menuShaur)


@dp.callback_query_handler(text_contains="üçî")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /gamburger_menu.png", "rb"), "Mahsulotni Tanlang: ",
                                    reply_markup=menuGam)


@dp.callback_query_handler(text_contains="ü•ô")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /asss_menu.png", "rb"), "Mahsulotni Tanlang: ",
                                    reply_markup=menuAssorti)


@dp.callback_query_handler(text_contains="üçü")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /kombo.png", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuKombo)


@dp.callback_query_handler(text_contains="üç∞")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Desert_menu.png", "rb"), "Mahsulotni Tanlang: ",
                                    reply_markup=menuDesert)


@dp.callback_query_handler(text_contains="ü•ó")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /sous.png", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuSous)


@dp.callback_query_handler(text_contains="üçπ")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Sok_menu.png", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuSok)


@dp.callback_query_handler(text_contains="‚òï")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Coffee.jpg", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuChoy)


@dp.callback_query_handler(text_contains="1a")
async def shaur(call: CallbackQuery):
    txt = f"–®–∞—É—Ä–º–∞ —Å –∫—É—Ä–∏—Ü–µ–π\n" \
          f"–†—É–º—è–Ω–æ–µ –∫—É—Ä–∏–Ω–æ–µ –º—è—Å–æ –≥—Ä–∏–ª—å, –∫—É—Å–æ—á–∫–∏ —Å–≤–µ–∂–µ–≥–æ –æ–≥—Ä—É—Ä—Ü–∞ –∏ —Å–æ—á–Ω–æ–≥–æ –ø–æ–º–∏–¥–æ—Ä–∞, —Ö—Ä—É—Å—Ç—è—â–∏–µ —á–∏–ø—Å—ã, " \
          f"—Ç–æ–º–∞—Ç–Ω—ã–π –≤–æ—Å—Ç–æ—á–Ω—ã–π —Å–æ—É—Å —Å–æ —Å–≤–µ–∂–∏–º –ª—É–∫–æ–º –∏ –∑–µ–ª–µ–Ω—å—é –≤ –∞—Ä–æ–º–∞—Ç–Ω–æ–π –ø–æ–ª—É–∫—Ä—É–≥–ª–æ–π –±—É–ª–æ—á–∫–µ —Å –∫—É–Ω–∂—É—Ç–Ω—ã–º–∏ " \
          f"—Å–µ–º–µ—á–∫–∞–º–∏.\n\n" \
          f"Narhi: 22000 so'm"
    await call.message.answer_photo(open("Images /shaurma_s_kurochkoy_biq_evos.png", "rb"), caption=txt,
                                    reply_markup=shaurmamenu)


@dp.callback_query_handler(text_contains="2a")
async def danar(call: CallbackQuery):
    txt = f"–î–æ–Ω–∞—Ä —Å –≥–æ–≤—è–¥–∏–Ω–æ–π\n"\
          f"–ö—É—Å–æ—á–∫–∏ —Å–æ—á–Ω–æ–π –≥–æ–≤—è–¥–∏–Ω—ã –≥—Ä–∏–ª—å, –∑–æ–ª–æ—Ç–∏—Å—Ç–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞ '—Ñ—Ä–∏', —Ä–∏—Å, –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π " \
          f"—Å–∞–ª–∞—Ç, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–æ—É—Å –∏ –∞—Ä–æ–º–∞—Ç–Ω–∞—è –ª–µ–ø–µ—à–∫–∞ –Ω–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –±–ª—é–¥–µ\n\n" \
          f"Narhi: 40000 so'm."
    await call.message.answer_photo(open("Images /donar_s_govyadinoy_evos.png", "rb"), caption=txt,
                                    reply_markup=shaurmamenu)


@dp.callback_query_handler(text_contains="3a")
async def shaur(call: CallbackQuery):
    txt = f"–®–∞—É—Ä–º–∞ –æ—Å—Ç—Ä–∞—è —Å –∫—É—Ä–∏—Ü–µ–π\n" \
          f"–†—É–º—è–Ω–æ–µ –∫—É—Ä–∏–Ω–æ–µ –º—è—Å–æ –≥—Ä–∏–ª—å, –ª–æ–º—Ç–∏–∫–∏ —Å–≤–µ–∂–µ–≥–æ –æ–≥—Ä—É—Ä—Ü–∞ –∏ —Å–æ—á–Ω–æ–≥–æ –ø–æ–º–∏–¥–æ—Ä–∞, —Ö—Ä—É—Å—Ç—è—â–∏–µ —á–∏–ø—Å—ã, —Ç–æ–º–∞—Ç–Ω—ã–π –æ—Å—Ç—Ä—ã–π " \
          f"—Å–æ—É—Å –ö–∞–ª–∞–º–ø–∏—Ä —Å –∫—É—Å–æ—á–∫–∞–º–∏ –ª—É–∫–∞ –≤ –∞—Ä–æ–º–∞—Ç–Ω–æ–π –±—É–ª–æ—á–∫–µ —Å –∫—É–Ω–∂—É—Ç–Ω—ã–º–∏ —Å–µ–º–µ—á–∫–∞–º–∏.\n\n" \
          f"Narhi: 22000 so'm"
    await call.message.answer_photo(open("Images /shaurma_ostraya_s_kurochkoy_big_evos.png", "rb"), caption=txt,
                                    reply_markup=shaurmamenu)


@dp.message_handler(text_contains="4a")
async def shaur(call: CallbackQuery):
    txt = f"–°–∞–± —Å –≥–æ–≤—è–¥–∏–Ω–æ–π\n" \
          f"–°–æ—á–Ω–∞—è –≥–æ–≤—è–¥–∏–Ω–∞ –≥—Ä–∏–ª—å, –∫–æ–ª—å—Ü–∞ —Å–≤–µ–∂–µ–≥–æ –∫—Ä–∞—Å–Ω–æ–≥–æ –ª—É–∫–∞, —Å–æ—É—Å '–±–∞—Ä–±–µ–∫—é' —Å –¥—ã–º–∫–æ–º –≤ " \
          f"—É–¥–ª–∏–Ω–µ–Ω–Ω–æ–π –ø—ã—à–Ω–æ–π –±—É–ª–æ—á–∫–µ\n\n" \
          f"Narhi: 17000 so'm"
    await call.message.answer_photo(open("Images /sub_s_govyadinoy_evos.png", "rb"), caption=txt,
                                    reply_markup=shaurmamenu)


@dp.message_handler(text_contains="5a")
async def shaur(call: CallbackQuery):
    txt = f"–°–∞–± —Å –∫—É—Ä–∏—Ü–µ–π\n" \
          f"–ö—É—Ä–∏–Ω–æ–µ –º—è—Å–æ –≥—Ä–∏–ª—å, –∫–æ–ª—å—Ü–∞ —Å–≤–µ–∂–µ–≥–æ –∫—Ä–∞—Å–Ω–æ–≥–æ –ª—É–∫–∞, —Å–æ—É—Å " \
          f"'–±–∞—Ä–±–µ–∫—é' —Å –¥—ã–º–∫–æ–º –≤ —É–¥–ª–∏–Ω–µ–Ω–Ω–æ–π –∏ –ø—ã—à–Ω–æ–π –±—É–ª–æ—á–∫–µ\n\n" \
          f"Narhi: 15000 so'm"
    await call.message.answer_photo(open("Images /sub_s_kurochkoy_evos.png", "rb"), caption=txt,
                                    reply_markup=shaurmamenu)


@dp.message_handler(text_contains="mlavash")
async def lavash(call: CallbackQuery):
    txt = f"–õ–∞–≤–∞—à —Å –≥–æ–≤—è–¥–∏–Ω–æ–π\n" \
          f"–°–æ—á–Ω—ã–µ –∫—É—Å–æ—á–∫–∏ –≥–æ–≤—è–¥–∏–Ω—ã –≥—Ä–∏–ª—å –∏ —Å–ø–µ–ª—ã—Ö –ø–æ–º–∏–¥–æ—Ä–æ–≤, –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–µ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–µ —á–∏–ø—Å—ã, —Ç–æ–º–∞—Ç–Ω—ã–π –≤–æ—Å—Ç–æ—á–Ω—ã–π —Å–æ—É—Å " \
          f"—Å–æ" \
          f"—Å–≤–µ–∂–∏–º –ª—É–∫–æ–º –∏ –∑–µ–ª–µ–Ω—å—é –≤ —Å–≤–µ–∂–∞–π—à–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º –ª–∞–≤–∞—à–µ.\n\n" \
          f"Narhi: 25000 so'm"
    await call.message.answer_photo(open("Images /lavash_s_govyadinoy_evos.png", "rb"), caption=txt,
                                    reply_markup=Lavashmenu)


@dp.callback_query_handler(text_contains="ack")
async def xit(call: CallbackQuery):
    await call.message.answer_photo(open("Images /Lavash_menu.png", "rb"), "Mahsulotni Tanlang: ", reply_markup=menuLav)


if __name__ == '__main__':
    executor.start_polling(dp)
